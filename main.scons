# accidental complexity:
# check command line variables
varcache = 'variables.cache'
var = Variables(varcache, ARGUMENTS)
var.AddVariables(
    ('ANDROID_KEY_STORE', 'Android keystore'),
    ('ANDROID_KEY_NAME', 'Android keyname'),
    ('ANDROID_NDK', 'Android NDK path'),
    ('ANDROID_SDK', 'Android SDK path'))
env = Environment(tools=[], variables=var)
# add required tool. See site_scons/site_tools/android.py
env.Tool('android')

# store command line options
var.Save(varcache, env)

# help hacks
if GetOption('help_variables'):
    print var.GenerateHelpText(env)
    Exit(0)
if GetOption('help'):
    Return()

# create the native library
ndk_lib = env.SharedLibrary('glbuffer', Glob('jni/*.c'),
              LIBS=['$LIBS', 'GLESv1_CM'])

# install to libs/armeabi
lib = env.Install('libs/armeabi', ndk_lib)

# builds the Java portion of the code and
# combines it with the native library
app = env.AndroidApp('GLBuffer')

# copy to the top level bin directory
env.Install('#bin', app)
